# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddModpackModInput {
  byUrl: [String!]!
  modpackId: ID!
}

input CreateModpackInput {
  minecraftVersion: String!
  modLoader: ModLoader!
  name: String!
}

type CreateModpackPayload {
  node: Modpack!
}

type GqlModDependency {
  modId: String!
  versionRange: String!
}

type ModJar {
  downloadUrl: String!
  fileName: String!
  id: ID!
  mods: [ModVersion!]!
  releaseType: ReleaseType!
}

enum ModLoader {
  FABRIC
  FORGE
}

type ModVersion {
  dependencies: [GqlModDependency!]!
  modId: String!
  modVersion: String!
  name: String!
  supportedMinecraftVersions: [String!]!
  supportedModLoader: ModLoader!
}

type Modpack {
  id: ID!
  minecraftVersion: String!
  modJars: [ModpackMod!]!
  modLoader: ModLoader!
  name: String!
  processingCount: Int!
}

type ModpackMod {
  addedAt: Boolean!
  isLibraryDependency: Boolean!
  jar: ModJar!
}

type Mutation {
  addModToModpack(input: AddModpackModInput!): CreateModpackPayload!
  createModpack(input: CreateModpackInput!): CreateModpackPayload!
  removeJarFromModpack(input: RemoveJarFromModpackInput!): CreateModpackPayload!
  setModpackJarIsLibrary(input: SetModpackJarIsLibraryInput!): SetModpackJarIsLibraryPayload!
}

type Query {
  modpack(id: ID!): Modpack
  modpacks: [Modpack!]
}

enum ReleaseType {
  ALPHA
  BETA
  STABLE
}

input RemoveJarFromModpackInput {
  jarId: ID!
  modpackId: ID!
}

input SetModpackJarIsLibraryInput {
  isLibrary: Boolean!
  jarId: ID!
  modpackId: ID!
}

type SetModpackJarIsLibraryPayload {
  node: ModpackMod!
}
